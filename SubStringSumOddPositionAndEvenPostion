package com.subarray;

import java.util.Scanner;

public class solution {
	public static int[] doubleValue = new int[10];
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		setDoubleValue();
		while(t>0){
			int n = sc.nextInt(),value=0,temp=0,value2=0,i=0,j=0,count=0;
			String str = sc.next();
			char arr[] = str.toCharArray();
			int sum[] = new int[n];
			int doubleSum[] = new int[n];

			for(i = n-1; i >= 0; i=i-2){
				temp = Character.getNumericValue(arr[i]);
				if(temp==0)
					count++;
				value = value + temp;
				value2 = value2 + doubleValue[temp]; 
				sum[i] = value;
				doubleSum[i] = value2;
			}
			temp=0;
			value=0;
			value2=0;
			for(i = n-2; i >= 0; i=i-2){
				temp = Character.getNumericValue(arr[i]);
				if(temp==0)
					count++;
				value = value + temp;
				value2 = value2 + doubleValue[temp]; 
				sum[i] = value;
				doubleSum[i] = value2;
			
			}
			for(i=n-1;i>=0;i--){
				value=0;
				value2=0;
				temp=0;
				for(j=i-1;j>=0;j--){
					value=0;
					value2=0;
					temp=0;
					if((i%2==0&&j%2==0)||(i%2!=0&&j%2!=0)){
						if(i+2<n)
							value = sum[j]-sum[i+2];
						else
							value = sum[j];
						if(i+1<n)
							value2 = doubleSum[j+1]-doubleSum[i+1];
						else
							value2 = doubleSum[j+1];
					}else{
						if(i+2<n){
								value = sum[j+1]-sum[i+2];
						}
						else{
							value = sum[j+1];
						}
						if(i+1<n)
							value2 = doubleSum[j]-doubleSum[i+1];
						else
							value2 = doubleSum[j];
					}
					temp = value + value2;
					if(temp%10==0)
						count++;
				//	System.out.println(i+" "+j+" :"+temp+" ");
				}
			//	System.out.println();
			}
			System.out.println(count);
			/*for(i=0;i<n;i++){
				System.out.print(doubleSum[i]+" ");
			}*/
			t--;
		}
	}
	public static void setDoubleValue(){
		doubleValue[0]=0;
		doubleValue[1]=2;
		doubleValue[2]=4;
		doubleValue[3]=6;
		doubleValue[4]=8;
		doubleValue[5]=1;
		doubleValue[6]=3;
		doubleValue[7]=5;
		doubleValue[8]=7;
		doubleValue[9]=9;
	}
}

/*8
1
1
1
0
4
0000
10
1234567890
29
41201953788963824033556555672
7
3000158
11
90540677470
36
188648824429847292479287385561746664*/
